name: Build Synchronism Whitepaper (CI-Safe)

on:
  push:
    branches: [ main ]
    paths:
      - 'whitepaper/**'
      - '.github/workflows/build_whitepaper.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'whitepaper/**'
  workflow_dispatch:  # Allow manual trigger

env:
  CI: true  # Set CI environment variable

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for proper git operations
          
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
          
      - name: Install System Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y pandoc texlive-xetex texlive-fonts-recommended texlive-latex-recommended texlive-latex-extra
          
      - name: Create CI-safe build scripts
        working-directory: ./whitepaper
        run: |
          # Create CI versions by copying real scripts and removing git operations
          
          # CI version of make-md.sh - remove git operations (lines 6-29)
          sed '6,29d' make-md.sh > make-md-ci.sh
          chmod +x make-md-ci.sh
          
          # CI version of make-pdf.sh - remove git operations (lines 6-29) and update TOC depth
          sed '6,29d' make-pdf.sh | sed 's/--toc-depth=3/--toc-depth=2/' > make-pdf-ci.sh
          chmod +x make-pdf-ci.sh
          
          # CI version of make-web-clean.sh - remove git operations (lines 7-29)
          sed '7,29d' make-web-clean.sh > make-web-ci.sh
          chmod +x make-web-ci.sh
          
      - name: Build Markdown Version
        working-directory: ./whitepaper
        run: bash make-md-ci.sh
          
      - name: Build PDF Version
        working-directory: ./whitepaper
        run: |
          echo "Building PDF version..."
          bash make-pdf-ci.sh || echo "PDF build had issues, continuing..."
          
      - name: Build Web Version
        working-directory: ./whitepaper
        run: |
          echo "Building Web version..."
          bash make-web-ci.sh
          
      - name: Upload Markdown Artifact
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: synchronism-markdown
          path: whitepaper/build/Synchronism_Whitepaper_Complete.md
          if-no-files-found: warn
          
      - name: Upload PDF Artifact
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: synchronism-pdf
          path: whitepaper/build/Synchronism_Whitepaper.pdf
          if-no-files-found: warn
          
      - name: Upload Web Artifact
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: synchronism-web
          path: whitepaper/build/web-clean/
          if-no-files-found: warn
          
      - name: Deploy to GitHub Pages
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: |
          # Configure git
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"
          
          # Check if there are changes in docs
          if [ -n "$(git status --porcelain docs/)" ]; then
            echo "Changes detected in docs/, committing..."
            git add docs/
            git commit -m "Deploy whitepaper builds to GitHub Pages [skip ci]"
            git push
          else
            echo "No changes in docs/, skipping commit"
          fi
          
  summary:
    needs: build
    runs-on: ubuntu-latest
    if: always()
    
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v3
        continue-on-error: true
        
      - name: Generate Build Summary
        run: |
          echo "# 📚 Synchronism Whitepaper Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Build Status" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Check Markdown
          if [ -f "synchronism-markdown/Synchronism_Whitepaper_Complete.md" ]; then
            echo "✅ **Markdown**: Successfully built ($(du -h synchronism-markdown/Synchronism_Whitepaper_Complete.md | cut -f1))" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Markdown**: Build failed or file not found" >> $GITHUB_STEP_SUMMARY
          fi
          
          # Check PDF
          if [ -f "synchronism-pdf/Synchronism_Whitepaper.pdf" ]; then
            echo "✅ **PDF**: Successfully built ($(du -h synchronism-pdf/Synchronism_Whitepaper.pdf | cut -f1))" >> $GITHUB_STEP_SUMMARY
          else
            echo "⚠️ **PDF**: Build issues or file not found (this is often due to LaTeX dependencies)" >> $GITHUB_STEP_SUMMARY
          fi
          
          # Check Web
          if [ -d "synchronism-web" ] && [ -f "synchronism-web/index.html" ]; then
            echo "✅ **Web**: Successfully built" >> $GITHUB_STEP_SUMMARY
            echo "  - Files: $(find synchronism-web -type f | wc -l)" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Web**: Build failed or files not found" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## View Online" >> $GITHUB_STEP_SUMMARY
          echo "[📖 Read the Whitepaper](https://dp-web4.github.io/Synchronism/whitepaper/)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "---" >> $GITHUB_STEP_SUMMARY
          echo "*Generated from commit: ${{ github.sha }}*" >> $GITHUB_STEP_SUMMARY